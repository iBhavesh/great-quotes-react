{"version":3,"sources":["components/layout/MainNavigation.module.css","components/quotes/QuoteForm.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/layout/Layout.module.css","components/UI/Card.module.css","components/UI/LoadingSpinner.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.module.css","components/layout/MainNavigation.tsx","components/layout/Layout.tsx","components/UI/Card.tsx","components/UI/LoadingSpinner.tsx","components/quotes/QuoteForm.tsx","hooks/use-http.ts","lib/api.ts","pages/NewQuote.tsx","components/comments/CommentItem.tsx","components/comments/CommentsList.tsx","components/comments/NewCommentForm.tsx","components/comments/Comments.tsx","components/quotes/HighlightedQuote.tsx","pages/NotFound.tsx","pages/QuoteDetail.tsx","components/quotes/NoQuotesFound.tsx","components/quotes/QuoteItem.tsx","components/quotes/QuoteList.tsx","pages/AllQuotes.tsx","App.tsx","index.tsx"],"names":["module","exports","MainNavigation","className","classes","header","logo","nav","to","activeClassName","active","Layout","props","main","children","Card","card","LoadingSpinner","spinner","QuoteForm","useState","isBlocking","setIsBlocking","authorInputRef","useRef","textInputRef","when","message","form","onFocus","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","control","htmlFor","required","type","id","ref","rows","actions","onClick","httpReducer","state","action","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","a","requestData","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","console","log","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","NewQuote","history","useHistory","useEffect","CommentItem","item","CommentsList","comments","map","comment","NewCommentForm","onAddedComment","commentTextRef","submitFormHandler","Comments","isAddingComment","setIsAddingComment","useParams","loadedComments","addedCommentHandler","length","HighlightedQuote","quote","NotFound","QuoteDetail","params","useRouteMatch","path","url","exact","NoQuotesFound","noquotes","QuoteItem","QuoteList","quotes","ascending","location","useLocation","isSortingDescending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","pathname","list","AllQuotes","loadedQuotes","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8c2b984.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"nav\":\"MainNavigation_nav__2KJfX\",\"active\":\"MainNavigation_active__oN3Ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","import { NavLink } from \"react-router-dom\";\nimport classes from \"./MainNavigation.module.css\";\n\nconst MainNavigation = () => {\n  return (\n    <header className={classes.header}>\n      <div className={classes.logo}>Great Quotes</div>\n      <nav className={classes.nav}>\n        <ul>\n          <li>\n            <NavLink to=\"/quotes\" activeClassName={classes.active}>\n              All Quotes\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/new-quote\" activeClassName={classes.active}>\n              Add a Quote\n            </NavLink>\n          </li>\n          {/* <li></li> */}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { ReactNode } from \"react\";\nimport classes from \"./Layout.module.css\";\nimport MainNavigation from \"./MainNavigation\";\n\ntype Props = {\n  children: ReactNode;\n};\nconst Layout = (props: Props) => {\n  return (\n    <>\n      <MainNavigation />\n      <main className={classes.main}>{props.children}</main>\n    </>\n  );\n};\n\nexport default Layout;\n","import { ReactNode } from \"react\";\nimport classes from \"./Card.module.css\";\ntype Props = {\n  children: ReactNode;\n};\nconst Card = (props: Props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { FormEventHandler, useRef, useState } from \"react\";\nimport { Prompt } from \"react-router\";\nimport { Quote } from \"../../helpers/types\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\ntype Props = {\n  onAddQuote: (arg0: Quote) => void;\n  isLoading: boolean;\n};\n\nconst QuoteForm = (props: Props) => {\n  const [isBlocking, setIsBlocking] = useState(false);\n  const authorInputRef = useRef<HTMLInputElement | null>(null);\n  const textInputRef = useRef<HTMLTextAreaElement | null>(null);\n\n  const submitFormHandler: FormEventHandler<HTMLFormElement> = (event) => {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current!.value;\n    const enteredText = textInputRef.current!.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  };\n\n  return (\n    <>\n      <Prompt\n        when={isBlocking}\n        message={() =>\n          \"Are you sure you want to leave this page? All your data will be lost!\"\n        }\n      />\n      <Card>\n        <form\n          className={classes.form}\n          onFocus={() => setIsBlocking(true)}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input required type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea required id=\"text\" rows={5} ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={() => setIsBlocking(false)} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import { useReducer, useCallback } from \"react\";\n\ntype StateType = {\n  status: null | string;\n  data: null | any;\n  error: null | string;\n};\n\ntype ACTIONTYPE =\n  | { type: \"SEND\" }\n  | { type: \"SUCCESS\"; responseData: any }\n  | { type: \"ERROR\"; errorMessage: string };\n\nfunction httpReducer(state: StateType, action: ACTIONTYPE) {\n  if (action.type === \"SEND\") {\n    return {\n      data: null,\n      error: null,\n      status: \"pending\",\n    };\n  }\n\n  if (action.type === \"SUCCESS\") {\n    return {\n      data: action.responseData,\n      error: null,\n      status: \"completed\",\n    };\n  }\n\n  if (action.type === \"ERROR\") {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: \"completed\",\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(\n  requestFunction: (arg0?: any) => any,\n  startWithPending = false\n) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? \"pending\" : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData = null) {\n      dispatch({ type: \"SEND\" });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: \"SUCCESS\", responseData });\n      } catch (error) {\n        dispatch({\n          type: \"ERROR\",\n          errorMessage: error.message || \"Something went wrong!\",\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","import { Quote, QuoteWithId } from \"../helpers/types\";\n\nconst FIREBASE_DOMAIN =\n  \"https://react-http-5b949-default-rtdb.asia-southeast1.firebasedatabase.app\";\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quotes.\");\n  }\n\n  const transformedQuotes: QuoteWithId[] = [];\n\n  for (const key in data) {\n    const quoteObj: QuoteWithId = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId: string) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quote.\");\n  }\n\n  const loadedQuote: QuoteWithId = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData: Quote) {\n  console.log(FIREBASE_DOMAIN);\n\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: \"POST\",\n    body: JSON.stringify(quoteData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not create quote.\");\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData: any) {\n  const response = await fetch(\n    `${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`,\n    {\n      method: \"POST\",\n      body: JSON.stringify(requestData.commentData),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not add comment.\");\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId: string) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not get comments.\");\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport QuoteForm from \"../components/quotes/QuoteForm\";\nimport { Quote } from \"../helpers/types\";\nimport useHttp from \"../hooks/use-http\";\nimport { addQuote } from \"../lib/api\";\n\nconst NewQuote = () => {\n  const { sendRequest, status } = useHttp(addQuote);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (status === \"completed\") {\n      history.push(\"/quotes\");\n    }\n  }, [status, history]);\n\n  const addQuoteHandler = (data: Quote) => {\n    console.log(data);\n    sendRequest(data);\n  };\n  return (\n    <QuoteForm isLoading={status === \"pending\"} onAddQuote={addQuoteHandler} />\n  );\n};\n\nexport default NewQuote;\n","import classes from \"./CommentItem.module.css\";\n\ntype Props = {\n  text: string;\n};\n\nconst CommentItem = (props: Props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from \"./CommentItem\";\nimport classes from \"./CommentsList.module.css\";\n\ntype Props = {\n  comments: any[];\n};\nconst CommentsList = (props: Props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { FormEventHandler, useEffect, useRef } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./NewCommentForm.module.css\";\n\ntype Props = {\n  quoteId: string;\n  onAddedComment: () => void;\n};\n\nconst NewCommentForm = ({ onAddedComment, quoteId }: Props) => {\n  const commentTextRef = useRef<HTMLTextAreaElement | null>(null);\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const submitFormHandler: FormEventHandler = (event) => {\n    event.preventDefault();\n    const enteredText = commentTextRef.current!.value;\n    sendRequest({ commentData: { text: enteredText }, quoteId });\n  };\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows={5} ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./Comments.module.css\";\nimport CommentsList from \"./CommentsList\";\nimport NewCommentForm from \"./NewCommentForm\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const { quoteId } = useParams<{ quoteId: string }>();\n\n  const {\n    sendRequest,\n    status,\n    error,\n    data: loadedComments,\n  } = useHttp(getAllComments, true);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  if (error) {\n    comments = <p className=\"focused centered\">{error}</p>;\n  }\n  if (status === \"completed\" && (loadedComments || loadedComments.length > 0)) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">No comments added!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from \"./HighlightedQuote.module.css\";\ntype Props = {\n  text: string;\n  author: string;\n};\nconst HighlightedQuote = (props: Props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","const NotFound = () => {\n  return (\n    <div className=\"centered\">\n      <p>Page Not Found!</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import { useEffect } from \"react\";\nimport { Route, useParams, useRouteMatch } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport NotFound from \"./NotFound\";\n\nconst QuoteDetail = () => {\n  const params = useParams<{ quoteId: string }>();\n  const { path, url } = useRouteMatch();\n  const {\n    status,\n    sendRequest,\n    error,\n    data: loadedQuote,\n  } = useHttp(getSingleQuote, true);\n\n  useEffect(() => {\n    sendRequest(params.quoteId);\n  }, [sendRequest, params.quoteId]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  if (error) {\n    return <p className=\"focused centered\">{error}</p>;\n  }\n  if (status === \"completed\" && !loadedQuote) {\n    return <NotFound />;\n  }\n  if (!loadedQuote) return <NotFound />;\n\n  return (\n    <>\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\n      <Route path={`${path}`} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${url}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n      <Route path={`${path}/comments`}>\n        <Comments />\n      </Route>\n    </>\n  );\n};\n\nexport default QuoteDetail;\n","import { Link } from \"react-router-dom\";\nimport classes from \"./NoQuotesFound.module.css\";\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to=\"/new-quote\" className=\"btn\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { Link } from \"react-router-dom\";\nimport { QuoteWithId } from \"../../helpers/types\";\nimport classes from \"./QuoteItem.module.css\";\n\nconst QuoteItem = (props: QuoteWithId) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={`/quotes/${props.id}`} className=\"btn\">\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { QuoteWithId } from \"../../helpers/types\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\ntype Props = {\n  quotes: QuoteWithId[];\n};\n\nconst sortQuotes = (quotes: QuoteWithId[], ascending: boolean) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props: Props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const useQuery = () => {\n    return new URLSearchParams(useLocation().search);\n  };\n  const isSortingDescending = useQuery().get(\"sort\") === \"desc\";\n  const changeSortingHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${isSortingDescending ? \"asc\" : \"desc\"}`,\n    });\n  };\n  const sortedQuotes = sortQuotes(props.quotes, !isSortingDescending);\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingDescending ? \"Ascending\" : \"Descending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { useEffect } from \"react\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\n\nexport const DUMMY_QUOTES = [\n  {\n    id: \"q1\",\n    author: \"Mahatma Gandhi\",\n    text: \"An eye for an eye makes the whole world blind\",\n  },\n  {\n    id: \"q2\",\n    author: \"Zakir\",\n    text: \"Everyone is hero in their own story.\",\n  },\n  {\n    id: \"q3\",\n    author: \"Albert Einstein\",\n    text: \"If you want to live a happy life, tie it to a goal, not to people or things.\",\n  },\n];\n\nconst AllQuotes = () => {\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error,\n  } = useHttp(getAllQuotes, true);\n\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  if (error) {\n    return <p className=\"centered\">{error}</p>;\n  }\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return <NoQuotesFound />;\n  }\n  if (!loadedQuotes) return <NoQuotesFound />;\n\n  return <QuoteList quotes={loadedQuotes} />;\n};\n\nexport default AllQuotes;\n","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router\";\nimport \"./App.css\";\nimport Layout from \"./components/layout/Layout\";\nimport NewQuote from \"./pages/NewQuote\";\nimport QuoteDetail from \"./pages/QuoteDetail\";\nimport AllQuotes from \"./pages/AllQuotes\";\nimport NotFound from \"./pages/NotFound\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to=\"/quotes\" />\n        </Route>\n        <Route exact path=\"/quotes\">\n          <AllQuotes />\n        </Route>\n        <Route path=\"/quotes/:quoteId\">\n          <QuoteDetail />\n        </Route>\n        <Route path=\"/new-quote\">\n          <NewQuote />\n        </Route>\n        <Route path=\"*\">\n          <NotFound />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}